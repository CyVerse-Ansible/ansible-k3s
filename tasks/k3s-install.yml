- name: SET_FACT; set install k3s version only if K3S_VERSION is defined
  set_fact:
    k3s_version: "INSTALL_K3S_VERSION={{ K3S_VERSION }}"
  when: K3S_VERSION is defined

- name: SET_FACT; set k3s_docker_flag only if K3S_DOCKER_ENABLE is defined and true
  set_fact:
    k3s_docker_flag:  "--docker"
  when: K3S_DOCKER_ENABLE is defined and K3S_DOCKER_ENABLE|bool

- name: SET_FACT; set k3s_disable_traefik if K3S_TRAEFIK_ENABLE is undefined or false
  set_fact:
    k3s_disable_traefik:  "INSTALL_K3S_EXEC=\"--disable traefik\""
  when: K3S_TRAEFIK_ENABLE is undefined or not K3S_TRAEFIK_ENABLE|bool

- name: SET_FACT; set k3s_postgresql_env if K3S_POSTGRESQL_ENABLE is defined and true
  set_fact:
    k3s_postgresql_env:  "K3S_DATASTORE_ENDPOINT='postgres://{{ K3S_POSTGRESQL_USER }}:{{ K3S_POSTGRESQL_PASS }}@{{ K3S_POSTGRESQL_HOST }}:{{ K3S_POSTGRESQL_PORT }}/{{ K3S_POSTGRESQL_DB }}'"
  when: inventory_hostname in groups['k3s_masters'] and K3S_POSTGRESQL_ENABLE is defined and K3S_POSTGRESQL_ENABLE|bool

- name: FILE; create /opt/k3s
  file:
    path: /opt/k3s
    state: directory
    mode: 0755

# This local action was added to prevent ddos k3s download if we had 100s of vms. If this becomes problematic, we can change this approach to an option
# The actual download ~27K and should be very fast to transfer locally (as of 5/13/2022)
- name: LOCAL_ACTION; download the k3s installer once for everyone
  local_action: 
    module: ansible.builtin.shell
    cmd: curl -sfL -o /tmp/k3s_install.sh https://get.k3s.io
    args:
      warn: false
      creates: /tmp/k3s_install.sh
  become: false
  run_once: true

- name: COPY; copy over the installer into /opt/k3s/k3s_install.sh
  copy:
    src: /tmp/k3s_install.sh
    dest: /opt/k3s/k3s_install.sh
    mode: 0755

###
# Install master node
###
# - name: SHELL; execute install script on master nodes first
#   shell: "curl -sfL https://get.k3s.io | {{ k3s_postgresql_env | default('') }} {{ k3s_version | default('') }} {{ k3s_disable_traefik | default() }} sh -s - {{ k3s_docker_flag | default('') }} >/opt/k3s/install.`date +'%Y%m%d-%H:%M'`.log 2>&1"
#   args:
#     warn: false
#   when: inventory_hostname in groups['k3s_masters'] and K3S_MASTER_INSTALL is defined and K3S_MASTER_INSTALL|bool

- name: SHELL; execute install script on master nodes first
  shell: "{{ k3s_postgresql_env | default('') }} {{ k3s_version | default('') }} {{ k3s_disable_traefik | default() }} /opt/k3s/k3s_install.sh {{ k3s_docker_flag | default('') }} >/opt/k3s/install.`date +'%Y%m%d-%H:%M'`.log 2>&1"
  args:
    warn: false
  when: inventory_hostname in groups['k3s_masters'] and K3S_MASTER_INSTALL is defined and K3S_MASTER_INSTALL|bool

- name: SET_FACT; obtain the k3s_master_ip
  set_fact:
    k3s_master_ip: "{{ hostvars[groups['k3s_masters'][0]]['ansible_default_ipv4']['address'] }}"
    k3s_master_url: "https://{{ hostvars[groups['k3s_masters'][0]]['ansible_default_ipv4']['address'] }}:{{ K3S_MASTER_PORT }}"
  when: K3S_MASTER_IP is not defined

- name: SET_FACT; set the k3s_master_ip based on given value
  set_fact:
    k3s_master_ip: "{{ K3S_MASTER_IP }}"
    k3s_master_url: "https://{{ K3S_MASTER_IP }}:{{ K3S_MASTER_PORT }}"
  when: K3S_MASTER_IP is defined

- name: SHELL; grab the token from the master
  shell: cat /var/lib/rancher/k3s/server/node-token
  register: k3s_master_token_file
  run_once: true
  when: inventory_hostname in groups['k3s_masters']

- name: SET_FACT; set the k3s_token fact for all nodes
  set_fact:
    k3s_token: "{{ k3s_master_token_file.stdout }}"
  run_once: true

- name: DEBUG; print master url and token
  debug:
    msg: "k3s master url = {{ k3s_master_url }}, token = {{ k3s_token }}"

###
# Install agent nodes
####
- name: SHELL; execute install script on agent nodes
  shell: "K3S_URL={{ k3s_master_url }} K3S_TOKEN={{ k3s_token }} {{ k3s_version | default('') }} /opt/k3s/k3s_install.sh {{ k3s_docker_flag | default('') }} >/opt/k3s/install.`date +'%Y%m%d-%H:%M'`.log 2>&1"
  args:
    warn: false
  when: groups['k3s_agents'] is defined and inventory_hostname in groups['k3s_agents']
