---
- name: Gather OS-specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"

# this sets up preliminary settings for multinode k3s
- block:
  - name: SYSCTL; enable forwarding ipv4
    sysctl:
      name: net.ipv4.ip_forward
      value: 1
      state: present

  - name: SYSCTL; enable forwarding ipv6
    sysctl:
      name: net.ipv4.ip_forward
      value: 1
      state: present

  # - name: SYSCTL; enable net.bridge.bridge-nf-call-iptables
  #   sysctl:
  #     name: net.bridge.bridge-nf-call-iptables
  #     value: 1
  #     state: present

  # - name: SYSCTL; net.bridge.bridge-nf-call-ip6tables
  #   sysctl:
  #     name: net.bridge.bridge-nf-call-ip6tables
  #     value: 1
  #     state: present
  when: K3S_IS_MULTINODE|bool 


- name: FILE; create /opt/k3s to be used for install log and passwords, if relevant
  file:
    path: /opt/k3s
    state: directory
    mode: 0755

- import_tasks: postgresql.yml
  when: inventory_hostname in groups['k3s_masters'] and K3S_POSTGRESQL_ENABLE is defined and K3S_POSTGRESQL_ENABLE|bool

- import_tasks: firewall.yml

- name: SHELL; uninstall if K3S_FORCE_UNINSTALL; if error, we'll assume it was already uninstalled
  shell: /usr/local/bin/k3s-uninstall.sh
  ignore_errors: true
  when: inventory_hostname in groups['k3s_cluster'] and K3S_FORCE_UNINSTALL is defined and K3S_FORCE_UNINSTALL|bool

- import_tasks: k3s-install.yml
